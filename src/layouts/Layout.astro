---
import "@fontsource-variable/onest"

import Header from "../components/Header.astro"
import Footer from "../components/Footer.astro"
import { ViewTransitions } from "astro:transitions"

interface Props {
  title: string
  description: string
}

const { description, title } = Astro.props
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=VT323&display=swap" rel="stylesheet">
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>

  <body class="relative text-black dark:text-white">
    <div class="fade-background"></div>
    <div
      class="absolute top-0 bottom-0 z-[-1] min-h-screen w-full backdrop-blur-[2px]"
    >
    </div>
    <Header />
    <slot />
    <Footer />
    <div class="scroll-indicator">â†‘</div>

    <script>
      // Intersection Observer para las secciones
      const sections = document.querySelectorAll('section');
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('visible');
          }
        });
      }, { threshold: 0.1 });

      sections.forEach(section => observer.observe(section));

      // Scroll indicator
      const scrollIndicator = document.querySelector('.scroll-indicator');
      if (scrollIndicator) {
        window.addEventListener('scroll', () => {
          if (window.scrollY > 300) {
            scrollIndicator.classList.add('visible');
          } else {
            scrollIndicator.classList.remove('visible');
          }
        });

        scrollIndicator.addEventListener('click', () => {
          window.scrollTo({
            top: 0,
            behavior: 'smooth'
          });
        });
      }
    </script>

    <style is:global>
      :root {
        color-scheme: light dark;
      }

      html {
        scroll-behavior: smooth;
      }

      .text-sm {
        font-size: 1.1rem;
        line-height: 1.25rem;
      }

      body {
        font-family: 'VT323', monospace;
        font-size: 1.2rem;
        color: rgba(17, 17, 17, 0.9);
        overflow-x: hidden;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        overscroll-behavior: none;
      }

      /* Fade Background Animation */
      .fade-background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -2;
        background: linear-gradient(120deg, 
          rgba(255, 255, 255, 0.5) 0%,
          rgba(255, 255, 255, 0.65) 50%,
          rgba(255, 255, 255, 0.8) 100%
        );
        background-size: 200% 200%;
        animation: fadeMove 20s ease-in-out infinite alternate;
      }

      .dark .fade-background {
        background: linear-gradient(120deg,
          rgba(17, 24, 39, 0) 0%,
          rgba(17, 24, 39, 0.5) 50%,
          rgba(17, 24, 39, 0.95) 100%
        );
        background-size: 200% 200%;
        animation: fadeMove 20s ease-in-out infinite alternate;
      }

      @keyframes fadeMove {
        0% {
          background-position: 0% 50%;
        }
        50% {
          background-position: 100% 50%;
        }
        100% {
          background-position: 0% 50%;
        }
      }
      .matrix-bg {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -2;
        background: linear-gradient(to bottom,
          rgba(0, 255, 0, 0.05) 0%,
          rgba(0, 255, 0, 0.1) 50%,
          rgba(0, 255, 0, 0.05) 100%
        );
        animation: matrix-rain 20s linear infinite;
        background-size: 200% 200%;
      }

      @keyframes matrix-rain {
        0% {
          background-position: 0% 0%;
        }
        50% {
          background-position: 100% 100%;
        }
        100% {
          background-position: 0% 0%;
        }
      }

      /* Dark mode adjustments */
      .dark .matrix-bg {
        background: linear-gradient(to bottom,
          rgba(0, 255, 0, 0.1) 0%,
          rgba(0, 255, 0, 0.15) 50%,
          rgba(0, 255, 0, 0.1) 100%
        );
      }

      /* Interactive elements */
      a, button {
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
      }

      a:hover, button:hover {
        text-shadow: 0 0 8px rgba(0, 255, 0, 0.5);
        transform: translateY(-2px);
      }

      /* Glowing effect for dark mode */
      .dark a:hover, .dark button:hover {
        text-shadow: 0 0 8px rgba(0, 255, 0, 0.8);
      }

      /* Card hover effects */
      article, .card {
        transition: all 0.3s ease;
        position: relative;
      }

      article:hover, .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 255, 0, 0.1);
      }

      .dark article:hover, .dark .card:hover {
        box-shadow: 0 10px 20px rgba(0, 255, 0, 0.2);
      }

      /* Glitch effect for headings */
      h1, h2, h3 {
        position: relative;
        cursor: default;
      }

      h1:hover, h2:hover, h3:hover {
        animation: glitch 0.5s infinite;
      }

      @keyframes glitch {
        0% {
          transform: translateX(0);
        }
        25% {
          transform: translateX(-2px);
          color: #0ff;
        }
        50% {
          transform: translateX(2px);
          color: #f0f;
        }
        75% {
          transform: translateX(-1px);
          color: #00ff00;
        }
        100% {
          transform: translateX(0);
        }
      }

      /* Smooth section transitions */
      section {
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.6s ease;
      }

      section.visible {
        opacity: 1;
        transform: translateY(0);
      }

      /* Image hover effects */
      img {
        transition: all 0.3s ease;
      }

      img:hover {
        transform: scale(1.05);
        filter: brightness(1.1);
      }

      /* Button press effect */
      button:active {
        transform: scale(0.95);
      }

      /* Scroll indicator */
      .scroll-indicator {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: rgba(0, 255, 0, 0.1);
        border: 2px solid rgba(0, 255, 0, 0.2);
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        opacity: 0;
      }

      .scroll-indicator.visible {
        opacity: 1;
      }

      .scroll-indicator:hover {
        background: rgba(0, 255, 0, 0.2);
        transform: translateY(-2px);
      }

      @media (prefers-reduced-motion: reduce) {
        html {
          scroll-behavior: auto;
        }
      }

      @media (prefers-color-scheme: dark) {
        body {
          color: rgba(255, 255, 255, 0.9);
        }
      }

      #header-nav {
        animation: blur linear both 0.5s;
        animation-timeline: scroll();
        animation-range: 0 500px;
      }

      @keyframes blur {
        to {
          backdrop-filter: blur(20px);
          border-width: 1px;
          border-color: rgba(0, 0, 0);
          padding: 0.25rem 0.75rem;
          display: flex;
          flex-direction: row;
          align-items: center;
          background-color: rgb(229, 229, 229);
          border-radius: 9999px;
        }
      }

      @media (prefers-color-scheme: dark) {
        @keyframes blur {
          from {
            border: 0px;
          }
          to {
            box-shadow:
              0px 5px 50px -5px rgba(0, 0, 0, 0.1),
              0px 0px 0 1px rgba(0, 0, 0, 0.3);
            background: rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(20px);
            border-width: 1px;
            border-color: rgba(0, 0, 0);
            padding-left: 0.75rem;
            padding-right: 0.75rem;
            padding-top: 0.25rem;
            padding-bottom: 0.25rem;
            display: flex;
            flex-direction: row;
            align-items: center;
            background-color: rgba(0, 0, 0, 0.3);
            border-radius: 9999px;
          }
        }
      }
    </style>
  </body>
</html>
